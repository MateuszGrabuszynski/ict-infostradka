---
swagger: "2.0"
info:
  description: "More on: https://github.com/MateuszGrabuszynski/ict-infostradka"
  version: "0.0.1"
  title: "Infostradka"
  termsOfService: ""
  contact:
    email: "mateusz.grabuszynski@student.put.poznan.pl"
  license:
    name: "MIT"
    url: "https://github.com/MateuszGrabuszynski/ict-infostradka/blob/master/LICENSE"
basePath: "/v1"
schemes:
- "http"
securityDefinitions:
  basicAuth:
    type: basic
paths:
  /display:
    get:
      tags:
      - "display"
      summary: "Returns display.html"
      description: ""
      operationId: "get_display"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.display_controller"
  /manager:
    get:
      tags:
      - "manager"
      summary: "Main manager's page"
      description: ""
      operationId: "get_manager"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
  /manager/displays:
    get:
      tags:
      - "manager"
      summary: "Availiable displays"
      description: ""
      operationId: "get_displays_list"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
  /manager/main_content:
    get:
      tags:
      - "manager"
      summary: "Main displays content"
      description: ""
      operationId: "get_displays_content"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
    post:
      tags:
      - "manager"
      summary: "Changes content"
      description:  ""
      operationId: "update_displays_content"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Whole left content"
        required: true
        schema:
          properties:
            sources:
              type: array
              items:
                $ref: '#/definitions/LeftElement'
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
      responses:
        200:
          description: OK
  /manager/right_panel:
    get:
      tags:
      - "manager"
      summary: "Right panel content"
      description: ""
      operationId: "get_right_content"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
    post:
      tags:
      - "manager"
      summary: "Changes right panel content"
      description:  ""
      operationId: "update_right_content"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "?"
        required: true
        schema:
          properties:
            sources:
              type: array
              items:
                $ref: '#/definitions/RightElement'
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
      responses:
        200:
          description: OK
  /manager/news_bar:
    get:
      tags:
      - "manager"
      summary: "News bar content"
      description: ""
      operationId: "get_news_bar"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
    post:
      tags:
      - "manager"
      summary: "Changes news bar"
      description:  ""
      operationId: "update_news_bar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "?"
        required: true
        schema:
          properties:
            sources:
              type: array
              items:
                $ref: '#/definitions/NewsElement'
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
      responses:
        200:
          description: OK
  /manager/files:
    get:
      tags:
      - "manager"
      summary: "File management"
      description: ""
      operationId: "get_file_manager"
      produces:
      - "text/html"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
    post:
      tags:
      - "manager"
      summary: "Post file"
      description: ""
      operationId: "post_file"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "file"
        required: true
        in: "formData"
        type: "file"
        format: "binary"
      responses:
        301:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
  /manager/files/{hash}:
    delete:
      tags:
      - "manager"
      summary: "Delete file"
      description: ""
      operationId: "delete_file"
      parameters:
      - name: "hash"
        required: true
        in: "path"
        type: "string"
      responses:
        200:
          description: "Deleting file finished successfully"
        400:
          description: "Error"
      x-swagger-router-controller: "swagger_server.controllers.manager_controller"
  /api/display:
    get:
      tags:
      - "api"
      summary: "Returns json with all rotator elements"
      description: ""
      operationId: "get_elements"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Getting rotator elements finished successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Rotator"
        400:
          description: "Pulling rotator elements caused error"
      x-swagger-router-controller: "swagger_server.controllers.api_controller"
  /api/display/{display_id}:
    get:
      tags:
      - "api"
      summary: "Get screenshot"
      description: ""
      operationId: "get_screenshot"
      produces:
      - "img/jpeg"
      parameters:
      - name: "display_id"
        required: true
        in: "path"
        type: "string"
      responses:
        200:
          description: "Getting rotator elements finished successfully"
          schema:
            type: "object"
            format: "binary"
        400:
          description: "Error"
      x-swagger-router-controller: "swagger_server.controllers.api_controller"
    put:
      tags:
      - "api"
      summary: "Send screenshot"
      description: ""
      operationId: "put_screenshot"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "display_id"
        required: true
        in: "path"
        type: "string"
      - name: "display_name"
        required: true
        in: "formData"
        type: "string"
      - name: "screenshot"
        required: true
        in: "formData"
        type: "file"
        format: "binary"
      responses:
        200:
          description: "Ended successfully"
      x-swagger-router-controller: "swagger_server.controllers.api_controller"
  /api/files/{hash}:
    get:
      tags:
      - "api"
      summary: "?"
      description: "?"
      operationId: "get_file"
      produces:
      - "image/jpeg"
      - "image/png"
      - "image/gif"
      - "text/html"
      parameters:
      - name: "hash"
        required: true
        in: "path"
        type: "string"
      responses:
        200:
          description: "Getting file ended successfully"
        400:
          description: "Error"
      x-swagger-router-controller: "swagger_server.controllers.api_controller"
definitions:
  LeftContent:
    type: "object"
    properties:
      source:
        type: "string"
      subtitles:
        type: "string"
    example:
      subtitles: "subtitles"
      source: "source"
  LeftElement:
    type: "object"
    properties:
      since:
        type: "integer"
        format: "date"
      until:
        type: "string"
        format: "date"
      duration:
        type: "integer"
      type:
        type: "string"
        default: "www"
        enum:
        - "image"
        - "html"
        - "www"
        - "video"
        - "stream"
      content:
        type: "object"
        items:
          $ref: "#/definitions/LeftContent"
    example:
      duration: 6
      until: "2000-01-23"
      type: "www"
      content:
      - subtitles: "subtitles"
        source: "source"
      - subtitles: "subtitles"
        source: "source"
      since: 0
  RightElement:
    type: "object"
    properties:
      since:
        type: "integer"
        format: "date"
      until:
        type: "string"
        format: "date"
      duration:
        type: "integer"
      source:
        type: "string"
    example:
      duration: 5
      until: "2000-01-23"
      source: "source"
      since: 1
  NewsElement:
    type: "object"
    properties:
      since:
        type: "integer"
        format: "date"
      until:
        type: "string"
        format: "date"
      duration:
        type: "integer"
      title:
        type: "string"
      content:
        type: "string"
    example:
      duration: 2
      until: "2000-01-23"
      title: "title"
      content: "content"
      since: 5
  Rotator:
    type: "object"
    properties:
      left:
        type: "array"
        items:
          $ref: "#/definitions/LeftElement"
      right:
        type: "array"
        items:
          $ref: "#/definitions/RightElement"
      news:
        type: "array"
        items:
          $ref: "#/definitions/NewsElement"
    example:
      news:
      - duration: 2
        until: "2000-01-23"
        title: "title"
        content: "content"
        since: 5
      - duration: 2
        until: "2000-01-23"
        title: "title"
        content: "content"
        since: 5
      left:
      - duration: 6
        until: "2000-01-23"
        type: "www"
        content:
        - subtitles: "subtitles"
          source: "source"
        - subtitles: "subtitles"
          source: "source"
        since: 0
      - duration: 6
        until: "2000-01-23"
        type: "www"
        content:
        - subtitles: "subtitles"
          source: "source"
        - subtitles: "subtitles"
          source: "source"
        since: 0
      right:
      - duration: 5
        until: "2000-01-23"
        source: "source"
        since: 1
      - duration: 5
        until: "2000-01-23"
        source: "source"
        since: 1
